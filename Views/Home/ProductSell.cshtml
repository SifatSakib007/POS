@model ProductCustomerViewModel

<div class="p-4">
    @* পণ্য বিক্রয় নিবন্ধন *@
    <p class="text-center text-xl mb-4">পণ্য বিক্রয় নিবন্ধন</p>

    <div class="font-[sans-serif] bg-white">
        <div class="max-w-4xl w-full h-max rounded-md px-4 py-8 mx-auto">
            <form class="mt-8">
                <!-- পণ্য ফর্ম -->
                <div class="flex flex-col md:grid md:grid-cols-2 gap-4">
                    <!-- Product Selection -->
                    <div>
                        <label asp-for="SelectedProductId" class="block text-sm text-gray-600">পণ্যের নাম</label>
                        <select id="productSelect" onchange="getProductDetails(this.value)" asp-for="SelectedProductId" class="px-4 py-3 bg-gray-100 focus:bg-white text-gray-800 w-full text-sm rounded-md">
                            <option value="">পণ্যের নাম</option>
                            @foreach (var product in Model.Products)
                            {
                                <option value="@product.ProductId">@product.ProductName</option>
                            }
                        </select>
                    </div>

                   @*   <div>
                         <label asp-for="ProductName" class="block text-sm text-gray-600">পণ্যের নাম</label>
                         <input asp-for="ProductName" id="productName" readonly class="px-4 py-3 bg-gray-100 w-full text-sm rounded-md" />
                     </div> *@

                    <div>
                        <label asp-for="BuyPrice" class="block text-sm text-gray-600">ক্রয় মূল্য</label>
                        <input asp-for="BuyPrice" id="buyPrice"  readonly class="px-4 py-3 bg-gray-100 w-full text-sm rounded-md" />
                    </div>

                    <div>
                        <label asp-for="Stock" class="block text-sm text-gray-600">স্টক</label>
                        <input type="number" id="stock" readonly  placeholder="সংখ্যায় লিখুন" class="px-4 py-3 bg-gray-100 focus:bg-white text-gray-800 w-full text-sm rounded-md" />
                    </div>

                    

                   
                    <!-- Quantity -->
                    <div>
                        <label asp-for="Sells.Quantity" class="block text-sm text-gray-600">পরিমাণ</label>
                        <input asp-for="Sells.Quantity" id="quantity" class="px-4 py-3 bg-gray-100 w-full text-sm rounded-md" />
                    </div>

                    <!-- বিক্রয় মূল্য -->
                    <div>
                        <label asp-for="Sells.SellingPrice" class="block text-sm text-gray-600">বিক্রয় মূল্য</label>
                        <input type="number" asp-for="Sells.SellingPrice" id="sellPrice" placeholder="সংখ্যায় লিখুন" class="px-4 py-3 bg-gray-100 focus:bg-white text-gray-800 w-full text-sm rounded-md focus:outline-blue-600" />
                    </div>

                    <!-- মোট মূল্য -->
                    <div>
                        <label asp-for="TotalPrice" class="block text-sm text-gray-600">মোট মূল্য</label>
                        <input type="number" id="totalPrice" readonly placeholder="সংখ্যায় লিখুন" class="px-4 py-3 bg-gray-100 focus:bg-white text-gray-800 w-full text-sm rounded-md focus:outline-blue-600" />
                    </div>
                </div>

               

                <!-- পণ্য যুক্ত করার বাটন -->
                <button type="button" id="addProductBtn" class="rounded-md px-6 py-3 w-full text-sm tracking-wide bg-blue-600 hover:bg-blue-700 text-white mt-4">যুক্ত করুন</button>



                <!-- পণ্যের টেবিল -->
                <div class="mt-8 overflow-x-auto">
                    <table id="productTable" class="min-w-full bg-white border border-gray-300">
                        <thead>
                            <tr>
                                <th class="px-4 py-2">পণ্যের নাম</th>
                                <th class="px-4 py-2">ক্রয় মূল্য</th>
                                <th class="px-4 py-2">বিক্রয় মূল্য</th>
                                <th class="px-4 py-2">পরিমাণ</th>
                                <th class="px-4 py-2">মোট মূল্য</th>
                                <th class="px-4 py-2">অ্যাকশন</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- এখানে ডায়নামিকভাবে পণ্য যুক্ত হবে -->
                        </tbody>
                    </table>
                </div>
            </form>
        </div>
    </div>

  
    @* {/* customer info */} *@
    <form class="font-[sans-serif] max-w-4xl mx-auto">
        <div class="grid sm:grid-cols-2 gap-6">
            <div class="relative flex items-center">
                <input asp-for="TotalTotalPrice" value="@Model.TotalTotalPrice" readonly id="totalTotalPrice" type="text" placeholder="মোট টাকা"
                       class="px-2 py-3 bg-white text-black w-full text-sm border-b-2 focus:border-[#007bff] outline-none" />
            </div>

            <!-- Customer Selection -->
            <div>
                <label asp-for="SelectedCustomerId" class="block text-sm text-gray-600">ক্রেতার নাম</label>
                <select id="customerSelect" asp-for="SelectedCustomerId" onchange="fetchCustomerDetails(this.value)" class="px-4 py-3 bg-gray-100 w-full text-sm rounded-md">
                    <option value="">ক্রেতার নাম</option>
                    @foreach (var customer in Model.Customers)
                    {
                        <option value="@customer.Id">@customer.Name</option>
                    }
                </select>
            </div>

            <div class="relative flex items-center">
                <input asp-for="CustomerPhoneNo" id="customerPhoneNo"  type="number" placeholder="ক্রেতার ফোন নাম্বার"
                       class="px-2 py-3 bg-white text-black w-full text-sm border-b-2 focus:border-[#007bff] outline-none" />
            </div>

            <div class="relative flex items-center">
                <input asp-for="CustomerAddress" id="customerAddress"  type="text" placeholder="ক্রেতার ঠিকানা"
                       class="px-2 py-3 bg-white text-black w-full text-sm border-b-2 focus:border-[#007bff] outline-none" />
            </div>
            <div class="relative flex items-center sm:col-span-2">
                <input  id="shabekDue" type="number" readonly placeholder="সাবেক টাকা"
                       class="px-2 py-3 bg-white text-black w-full text-sm border-b-2 focus:border-[#007bff] outline-none" />
            </div>
            <div class="relative flex items-center sm:col-span-2">
                <input id="shorboMotTaka" type="number" placeholder="সর্বমোট টাকা"
                       class="px-2 py-3 bg-white text-black w-full text-sm border-b-2 focus:border-[#007bff] outline-none" />
            </div>
         


            <div class="relative flex items-center sm:col-span-2">
                <input asp-for="Deposit" id="depositAmount" type="number" placeholder="পরিশোধক্রিত টাকা"
                       class="px-2 py-3 bg-white text-black w-full text-sm border-b-2 focus:border-[#007bff] outline-none" />
            </div>

            <div class="relative flex items-center sm:col-span-2">
                <input  readonly id="dueAmount" type="number" placeholder="বাকি টাকা"
                       class="px-2 py-3 bg-white text-black w-full text-sm border-b-2 focus:border-[#007bff] outline-none" />
            </div>
        </div>

        <button type="button"
                class="mt-10 px-6 py-2.5 w-full text-sm bg-[#007bff] text-white hover:bg-[#006bff] rounded-sm">
            Submit
        </button>
    </form>

</div>

<script>
    
                            // Function to fetch product details using AJAX
        function getProductDetails(productId) {
            fetch(`Home/GetProductDetails?productId=${productId}`)
                .then(response => response.json())
                .then(data => console.log(data)
                //     {
                //     if (data.success) {

                //         Update the view with the fetched product details
                //         document.getElementById("productSelect").value = data.data.productName;
                //         document.getElementById("buyPrice").value = data.data.buyPrice;
                //         document.getElementById("stock").value = data.data.stock;

                //         Update the ViewModel properties (optional)
                //         document.querySelector('input[name="ProductName"]').value = data.data.productName;
                //         document.querySelector('input[name="BuyPrice"]').value = data.data.buyPrice;
                //         document.querySelector('input[name="Stock"]').value = data.data.stock;
                //     } else {
                //         Handle error case
                //         console.error(data.message);
                //     }
                // }
                )
                .catch(error => {

                    console.error(error);
                });
                            }

    // Function to handle changes in the product selection dropdown
    // $(document).on('change', '#productName', function() {
    //     var productId = $(this).val();                             Get the selected product ID
    //     fetchProductDetails(productId);                            Fetch product details
    // });

    
                        // Calculate total price whenever quantity or selling price changes
        $(document).on('input', '#quantity, #sellPrice', function() {
                            var quantity = parseFloat($('#quantity').val()) || 0;      // Get quantity
        var sellingPrice = parseFloat($('#sellPrice').val()) || 0; // Get selling price
        var totalPrice = (quantity * sellingPrice).toFixed(2);     // Calculate total price
        $('#totalPrice').val(totalPrice);                          // Update total price field
                        });



            // Add product to the table when the "Add" button is clicked
        $(document).on('click', '#addProductBtn', function() {
                var productName = $('#productName option:selected').text();
        var buyPrice = $('#buyPrice').val();
        var sellPrice = $('#sellPrice').val();
        var quantity = $('#quantity').val();
        var totalPrice = $('#totalPrice').val();

        if (productName && buyPrice && sellPrice && quantity && totalPrice) {
                    var newRow = `<tr>
            <td class="px-4 py-2">${productName}</td>
            <td class="px-4 py-2">${buyPrice}</td>
            <td class="px-4 py-2">${sellPrice}</td>
            <td class="px-4 py-2">${quantity}</td>
            <td class="px-4 py-2">${totalPrice}</td>
            <td class="px-4 py-2">
                <button type="button" class="delete-btn text-red-500">মুছে দিন</button>
            </td>
        </tr>`;
        $('#productTable tbody').append(newRow);  // Append new row to the table
        clearProductFields();                      // Clear the fields after adding
        updateTotalAmount();                      // Update the total amount after adding
                } else {
            alert("অনুগ্রহ করে সব তথ্য পূরণ করুন!"); // Alert if fields are empty
                }
            });

        // Clear input fields for products
        function clearProductFields() {
            $('#productName').val('');
        $('#buyPrice').val('');
        $('#stock').val('');
        $('#quantity').val('');
        $('#sellPrice').val('');
        $('#totalPrice').val('');
            }

  
        function fetchCustomerDetails(customerId){
            fetch(`Home/GetCustomerDetails?customerId=${customerId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        //upload the view with the fetched customer details
                        //document.getElementById("customerSelect").value = data.data.name;
                        document.getElementById("customerAddress").value = data.data.address;
                        document.getElementById("customerPhoneNo").value = data.data.phoneNo;
                        document.getElementById("shabekDue").value = data.data.due;

                        // Update the ViewModel properties (optional)
                        // document.querySelector('input[name="CustomerName"]').value = data.data.name;
                        document.querySelector('input[name="Address"]').value = data.data.address;
                        document.querySelector('input[name="PhoneNo"]').value = data.data.phoneNo;
                        document.querySelector('input[name="Due"]').value = data.data.due;

                    } else {
                        console.error(data.message);
                    }
                }
                )
                .catch(error => {
                    console.error(error);
                });
                    }
   
                    // Update total amount in the form
        function updateTotalAmount() {
                        var totalAmount = 0;
        $('#productTable tbody tr').each(function() {
                            var rowTotal = parseFloat($(this).find('td:eq(4)').text()) || 0;  // Get the total price from the row
        totalAmount += rowTotal;                                          // Accumulate the total amount
                        });
        $('#totalTotalPrice').val(totalAmount.toFixed(2));  // Update the total price field
                    }



    // Remove product from the table
    $(document).on('click', '.delete-btn', function() {
        $(this).closest('tr').remove();  // Remove the selected row
        updateTotalAmount();             // Update the total amount after deletion
    });
</script>
