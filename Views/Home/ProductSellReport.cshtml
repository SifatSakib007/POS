@model IEnumerable<POS.Models.Sell>

<body class="bg-gray-100">
    <div class="container mx-auto px-4 mt-8">
        <h2 class="text-2xl font-bold mb-6">Product Sell Report</h2>

        <!-- Date Range Filter -->
        <div class="flex justify-start space-x-4 mb-4">
            <div>
                <label for="fromDate" class="block text-gray-700 text-sm font-bold mb-2">From:</label>
                <input id="fromDate" type="text" placeholder="Choose start date"
                       class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
            </div>
            <div>
                <label for="toDate" class="block text-gray-700 text-sm font-bold mb-2">To:</label>
                <input id="toDate" type="text" placeholder="Choose end date"
                       class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
            </div>
        </div>

        <!-- Total Sell Amount -->
        <div class="mb-6">
            <h3 class="text-xl font-semibold">Total Sell Amount: <span id="totalSellAmount">0</span> Taka</h3>
        </div>

        <!-- Table for displaying the sell report -->
        <table id="sellTable" class="min-w-full bg-white border">
            <thead>
                <tr class="bg-gray-800 text-white">
                    <th class="px-4 py-2">Product</th>
                    <th class="px-4 py-2">Customer</th>
                    <th class="px-4 py-2">Quantity</th>
                    <th class="px-4 py-2">Total</th>
                    <th class="px-4 py-2">Date</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var sell in Model)
                {
                    <tr class="border-b">
                        <td class="px-4 py-2">@sell.ProductNames</td>
                        <td class="px-4 py-2">@sell.CustomerName</td>
                        <td class="px-4 py-2">@sell.Quantities</td>
                        <td class="px-4 py-2 sell-price">@sell.TotalPricePerProduct</td>
                        <td class="px-4 py-2">
                            @if (sell.CreatedAt.HasValue)
                            {
                                @sell.CreatedAt.Value.ToString("yyyy-MM-dd hh:mm tt")
                            }
                            else
                            {
                                <span>N/A</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Flatpickr and Tailwind CSS Initialization -->
    <link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        // Initialize Flatpickr Date Pickers
        document.addEventListener('DOMContentLoaded', function() {
            flatpickr("#fromDate", {
                enableTime: true,
                dateFormat: "Y-m-d H:i",
            });
            flatpickr("#toDate", {
                enableTime: true,
                dateFormat: "Y-m-d H:i",
            });

            // Function to calculate total sell amount
            function calculateTotal() {
                let totalSell = 0;
                $('#sellTable tbody tr:visible').each(function() {
                    const price = parseFloat($(this).find('.sell-price').text()) || 0;
                    totalSell += price;
                });
                $('#totalSellAmount').text(totalSell.toFixed(2));
            }

            // Date Range Filtering Logic
            function filterByDate() {
                const fromDate = new Date($('#fromDate').val());
                const toDate = new Date($('#toDate').val());

                $('#sellTable tbody tr').each(function() {
                    const dateText = $(this).find('td:nth-child(5)').text();
                    const sellDate = new Date(dateText);

                    if ((isNaN(fromDate.getTime()) || sellDate >= fromDate) &&
                        (isNaN(toDate.getTime()) || sellDate <= toDate)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });

                // Recalculate the total sell after filtering
                calculateTotal();
            }

            // Bind the filter action to date inputs
            $('#fromDate, #toDate').on('change', function() {
                filterByDate();
            });

            // Initial total sell calculation
            calculateTotal();
        });
    </script>
</body>
